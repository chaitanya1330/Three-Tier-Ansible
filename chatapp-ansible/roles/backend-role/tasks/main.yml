---
- name: First update the packagers
  apt: update_cache=yes force_apt_get=yes

- name: Remove dpkg lock file
  command: sudo rm -f /var/lib/dpkg/lock-frontend
  ignore_errors: yes

- name: Remove apt directory lock
  command: sudo rm -f /var/cache/apt/archives/lock
  ignore_errors: yes

- name: Wait for 2 minutes
  pause:
    minutes: 2

- name: Clean package cache if lock issue persists
  command: sudo apt clean
  ignore_errors: yes
  when: >
    "'E: Could not get lock' in ansible_run_result.stderr"


- name: Install python3-pip, python3-dev and git
  apt: name='{{item}}' state=present
  with_items:
    - python3-pip
    - python3-dev
    - git

- name: Installing virtualenv using pip3
  pip:
    name: virtualenv
    executable: pip3

- name: Check if .git directory exists
  stat:
      path: /home/ubuntu/new_chatapp/.git
  register: git_repo_status

- name: Clone the repository if .git directory doesn't exist
  git:
      repo: https://github.com/chaitanya1330/new_chatapp.git
      dest: /home/ubuntu/new_chatapp
  when: git_repo_status.stat.exists == false

- name: creating virtual environment inside new_chatapp
  command:
    cmd: virtualenv /home/ubuntu/new_chatapp/venv
    creates: /home/ubuntu/new_chatapp/venv

- name: Installing requirements.txt in virtualenv
  pip:
    requirements: /home/ubuntu/new_chatapp/requirements.txt
    virtualenv: /home/ubuntu/new_chatapp/venv
    virtualenv_python: python3

# - name: Installing gunicorn
#   pip:
#     name: gunicorn
#     executable: pip3

# - name: installing mysql-server
#   apt: name=mysql-server state=present

# - name: intalling mysql-client
#   apt: name=mysql-client state=present

# - name: Start the MySQL service
#   action: service name=mysql state=started

# - name: Installing PyMySql
#   pip:
#     name: pymysql
#     executable: pip3


- name: installing mysql-server
  apt: name=mysql-server state=present

- name: intalling mysql-client
  apt: name=mysql-client state=present

- name: Start the MySQL service
  action: service name=mysql state=started

- name: Installing PyMySql
  pip:
    name: pymysql
    executable: pip3

- name: install default-libmysqlclient-dev package for chat app
  apt: name=default-libmysqlclient-dev state=present

- name: install libssl-dev package for chat app
  apt: name=libssl-dev state=present

- name: install mysqlclient
  pip:
    name: mysqlclient
    virtualenv: /home/ubuntu/new_chatapp/venv

- name: install package for chat app
  apt: name=python3-psycopg2 state=present

- name: install psycopg2-binary
  pip:
    name: psycopg2-binary
    virtualenv: /home/ubuntu/new_chatapp/venv
    virtualenv_python: python3

      #- name: Replace old database configuration with new one in settings.py
  #replace:
    #path: /home/ubuntu/new_chatapp/fundoo/fundoo/settings.py
          #regexp: "{{ item.regexp }}"
          #replace: "{{ item.replace }}"
          #with_items:
    #- { regexp: "'NAME': 'mysqldb',", replace: "'NAME': '{{ chatapp_db }}'," }
          #       - { regexp: "'PASSWORD': 'admin12345',", replace: "'PASSWORD': '{{ chay1234 }}'," }
          #- { regexp: "'HOST': 'mysqldb.ckz7bawd2dzf.ap-south-1.rds.amazonaws.com',", replace: "'HOST': '{{ localhost }}'," }
          #        - { regexp: "'USER': 'admin',", replace: "'USER': '{{ root }}'," }

- name: running python migrate
  django_manage:
    command:  migrate
    app_path: /home/ubuntu/new_chatapp/fundoo
    virtualenv: /home/ubuntu/new_chatapp/venv

- name: running python makemigration
  django_manage:
    command:  makemigrations
    app_path: /home/ubuntu/new_chatapp/fundoo
    virtualenv: /home/ubuntu/new_chatapp/venv

- name: creating gunicorn.service file
  file:
    path: /etc/systemd/system/gunicorn.service
    state: touch

- name: copying gunicorn template to gunicorn.service file
  template:
    src: gunicorn.j2
    dest: /etc/systemd/system/gunicorn.service

- name: starting and enabling  gunicorn
  service:
    name: gunicorn
    enabled: true
    daemon-reload: yes
    state: started
